class Solution {
public:
    int solve(int i, vector<int>& nums, vector<int>& dp, int end) {
        if (i > end) return 0; 
        if (dp[i] != -1) return dp[i];
        
        int steal = nums[i] + solve(i + 2, nums, dp, end);
        int skip = solve(i + 1, nums, dp, end);
        
        return dp[i] = max(steal, skip);
    }

    int rob(vector<int>& nums) {
        int n = nums.size();
        if (n == 1) return nums[0];
        if (n == 2) return max(nums[0], nums[1]);

        vector<int> dp1(n, -1);
        int case1 = solve(0, nums, dp1, n - 2);
        vector<int> dp2(n, -1);
        int case2 = solve(1, nums, dp2, n - 1);

        return max(case1, case2);
    }
};
