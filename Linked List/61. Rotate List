class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head || !head->next || k == 0) return head;
        ListNode* last = head;
        int n=1;
        while (last->next) {
            last = last->next;
            n++;
        }
        last->next=head;
        //Now the list is a full cycle

        k=k%n;
        int stepsToHead=n-k;

        ListNode* newTail=head;
        for(int i=1;i<stepsToHead;i++){
            newTail=newTail->next;
        }

        ListNode* newHead=newTail->next;
        newTail->next=nullptr;

        return newHead;
    }
};
